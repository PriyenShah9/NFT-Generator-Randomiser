{"ast":null,"code":"var _jsxFileName = \"/Users/uelpalmer/nftBoiler/NFT_Spring2022/nft-minter/src/App.js\";\nimport logo from './assets/logo3.png';\nimport './styles/App.css'; //Component imports\n\nimport ConnectWalletButton from \"./components/ConnectWalletButton.js\";\nimport CustomHeader from \"./components/CustomHeader.js\";\nimport CustomTextField from \"./components/CustomTextField.js\";\nimport MintBtn from \"./components/MintButton.js\";\nimport DisplayImage from \"./components/DisplayImage.js\";\nimport MetaMaskAuth from './components/MetaMaskAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  // Initialization and functions\n  // Called when button is pressed\n  // const connectWallet = async () => {\n  //  alert(\"Get MetaMask\");\n  //}\n  async function connect(onConnected) {\n    if (!window.ethereum) {\n      alert(\"Get MetaMask!\");\n      return;\n    }\n\n    const accounts = await window.ethereum.request({\n      method: \"eth_requestAccounts\"\n    });\n    onConnected(accounts[0]); // this function connect the user to metamask. \n  } // Called when mint button is pressed\n\n\n  const mint = async () => {\n    alert(\"Mint\");\n  };\n  /* Page rendering */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"BoilerBlockchain\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Content1\",\n        children: [/*#__PURE__*/_jsxDEV(CustomHeader, {\n          text: \"NFT Minter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DisplayImage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomTextField, {\n          text: \"Purdue Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Discord Tag\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ConnectWalletButton, {\n          connectWallet: connect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MetaMaskAuth, {\n          Connect: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MintBtn, {\n          mintClick: mint\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/uelpalmer/nftBoiler/NFT_Spring2022/nft-minter/src/App.js"],"names":["logo","ConnectWalletButton","CustomHeader","CustomTextField","MintBtn","DisplayImage","MetaMaskAuth","App","connect","onConnected","window","ethereum","alert","accounts","request","method","mint"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,oBAAjB;AACA,OAAO,kBAAP,C,CAEA;;AACA,OAAOC,mBAAP,MAAgC,qCAAhC;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;;;AAEA,SAASC,GAAT,GAAe;AACb;AAEA;AACD;AACC;AACA;AAEA,iBAAeC,OAAf,CAAuBC,WAAvB,EAAoC;AAClC,QAAI,CAACC,MAAM,CAACC,QAAZ,EAAsB;AACpBC,MAAAA,KAAK,CAAC,eAAD,CAAL;AACA;AACD;;AAED,UAAMC,QAAQ,GAAG,MAAMH,MAAM,CAACC,QAAP,CAAgBG,OAAhB,CAAwB;AAC7CC,MAAAA,MAAM,EAAE;AADqC,KAAxB,CAAvB;AAIAN,IAAAA,WAAW,CAACI,QAAQ,CAAC,CAAD,CAAT,CAAX,CAVkC,CAUR;AAC3B,GAnBY,CAqBb;;;AACA,QAAMG,IAAI,GAAG,YAAY;AACvBJ,IAAAA,KAAK,CAAC,MAAD,CAAL;AACD,GAFD;AAIA;;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEZ,IAAV;AAAgB,QAAA,SAAS,EAAC,UAA1B;AAAqC,QAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACE,QAAC,YAAD;AAAc,UAAA,IAAI,EAAE;AAApB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,eAAD;AAAiB,UAAA,IAAI,EAAE;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAO,UAAA,WAAW,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAA;AAAA;AAAA;AAAA,gBALF,eAME,QAAC,mBAAD;AAAqB,UAAA,aAAa,EAAEQ;AAApC;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE,QAAC,YAAD;AAAc,UAAA,OAAO;AAArB;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE;AAAA;AAAA;AAAA;AAAA,gBARF,eASE,QAAC,OAAD;AAAS,UAAA,SAAS,EAAEQ;AAApB;AAAA;AAAA;AAAA;AAAA,gBATF,eAUE;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;KAnDQT,G;AAqDT,eAAeA,GAAf","sourcesContent":["import logo from './assets/logo3.png';\nimport './styles/App.css';\n\n//Component imports\nimport ConnectWalletButton from \"./components/ConnectWalletButton.js\";\nimport CustomHeader from \"./components/CustomHeader.js\"\nimport CustomTextField from \"./components/CustomTextField.js\"\nimport MintBtn from \"./components/MintButton.js\"\nimport DisplayImage from \"./components/DisplayImage.js\"\nimport MetaMaskAuth from './components/MetaMaskAuth';\n\nfunction App() {\n  // Initialization and functions\n\n  // Called when button is pressed\n // const connectWallet = async () => {\n  //  alert(\"Get MetaMask\");\n  //}\n\n  async function connect(onConnected) { \n    if (!window.ethereum) {\n      alert(\"Get MetaMask!\");\n      return;\n    }\n  \n    const accounts = await window.ethereum.request({\n      method: \"eth_requestAccounts\",\n    });\n  \n    onConnected(accounts[0]); // this function connect the user to metamask. \n  }\n\n  // Called when mint button is pressed\n  const mint = async () => {\n    alert(\"Mint\")\n  }\n\n  /* Page rendering */\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          <code>BoilerBlockchain</code>\n        </p>\n        <div className=\"Content1\"> \n          <CustomHeader text={\"NFT Minter\"}></CustomHeader>\n          <DisplayImage/>\n          <CustomTextField text={\"Purdue Email\"}></CustomTextField>\n          <input placeholder='Discord Tag'></input>\n          <br/>\n          <ConnectWalletButton connectWallet={connect}/>\n          <MetaMaskAuth Connect/>\n          <br/>\n          <MintBtn mintClick={mint}/>\n          <br/>\n          \n        </div>\n      </header>\n      \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}