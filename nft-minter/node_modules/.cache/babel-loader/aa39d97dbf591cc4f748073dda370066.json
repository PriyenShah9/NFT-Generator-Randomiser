{"ast":null,"code":"var _jsxFileName = \"/Users/uelpalmer/nftBoiler/NFT_Spring2022/nft-minter/src/components/CustomTextField.js\";\nimport { render } from \"@testing-library/react\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TextField extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getInputValue = event => {\n      const userValue = event.target.value;\n\n      if (userValue.split(\"@\")[1] == \"purdue.edu\") {\n        this.setState({\n          validity: \"valid email!\"\n        });\n      } else {\n        this.setState({\n          validity: \"invalid email!\"\n        });\n      }\n    };\n\n    this.text = props.text;\n    this.state = {\n      validity: \"\"\n    };\n  } // checks input email\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: this.text,\n        onChange: this.getInputValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.validity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TextField;","map":{"version":3,"sources":["/Users/uelpalmer/nftBoiler/NFT_Spring2022/nft-minter/src/components/CustomTextField.js"],"names":["render","React","TextField","Component","constructor","props","getInputValue","event","userValue","target","value","split","setState","validity","text","state"],"mappings":";AAAA,SAASA,MAAT,QAAuB,wBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,SAAN,SAAwBD,KAAK,CAACE,SAA9B,CAAwC;AAEtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAUnBC,aAVmB,GAUFC,KAAD,IAAW;AACzB,YAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA/B;;AAEA,UAAIF,SAAS,CAACG,KAAV,CAAgB,GAAhB,EAAqB,CAArB,KAA2B,YAA/B,EAA6C;AAC3C,aAAKC,QAAL,CAAc;AAACC,UAAAA,QAAQ,EAAE;AAAX,SAAd;AACD,OAFD,MAEO;AACL,aAAKD,QAAL,CAAc;AAACC,UAAAA,QAAQ,EAAE;AAAX,SAAd;AACD;AACF,KAlBkB;;AAEjB,SAAKC,IAAL,GAAYT,KAAK,CAACS,IAAlB;AAEA,SAAKC,KAAL,GAAa;AACXF,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD,GATqC,CAWtC;;;AAWAb,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACI;AACA,QAAA,WAAW,EAAE,KAAKc,IADlB;AAEA,QAAA,QAAQ,EAAE,KAAKR;AAFf;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA,kBACG,KAAKS,KAAL,CAAWF;AADd;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AAnCqC;;AAwCxC,eAAeX,SAAf","sourcesContent":["import { render } from \"@testing-library/react\";\nimport React from \"react\";\n\nclass TextField extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.text = props.text\n\n    this.state = {\n      validity: \"\"\n    };\n  }\n\n  // checks input email\n  getInputValue = (event) => {\n    const userValue = event.target.value;\n\n    if (userValue.split(\"@\")[1] == \"purdue.edu\") {\n      this.setState({validity: \"valid email!\"});\n    } else {\n      this.setState({validity: \"invalid email!\"});\n    }\n  };\n\n  render() {\n    return (\n      <div>\n          <input\n          placeholder={this.text}\n          onChange={this.getInputValue}\n          /> \n          <p>\n            {this.state.validity}\n          </p> \n      </div>\n    \n    );\n  }\n\n\n}\n\nexport default TextField;\n"]},"metadata":{},"sourceType":"module"}