{"ast":null,"code":"var _jsxFileName = \"/Users/uelpalmer/nftBoiler/NFT_Spring2022/nft-minter/src/components/ConnectWalletButton.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ConnectWalletbutton = _ref => {\n  let {\n    connectWallet,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: connectWallet,\n    className: \"cta-button connect-to-wallet-button\",\n    children: \"Connect Metamask Wallet\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ConnectWalletbutton;\n\nasync function connect(onConnected) {\n  if (!window.ethereum) {\n    alert(\"Get MetaMask!\");\n    return;\n  }\n\n  const accounts = await window.ethereum.request({\n    method: \"eth_requestAccounts\"\n  });\n  onConnected(accounts[0]);\n}\n\nasync function checkIfWalletIsConnected(onConnected) {\n  if (window.ethereum) {\n    const accounts = await window.ethereum.request({\n      method: \"eth_accounts\"\n    });\n\n    if (accounts.length > 0) {\n      const account = accounts[0];\n      onConnected(account);\n      return;\n    }\n  }\n}\n\nexport default ConnectWalletbutton;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConnectWalletbutton\");","map":{"version":3,"sources":["/Users/uelpalmer/nftBoiler/NFT_Spring2022/nft-minter/src/components/ConnectWalletButton.js"],"names":["React","useEffect","useState","ConnectWalletbutton","connectWallet","props","connect","onConnected","window","ethereum","alert","accounts","request","method","checkIfWalletIsConnected","length","account"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAGA,MAAMC,mBAAmB,GAAG,QAA+B;AAAA,MAA9B;AAACC,IAAAA,aAAD;AAAgB,OAAGC;AAAnB,GAA8B;AACvD,sBACI;AACA,IAAA,OAAO,EAAED,aADT;AAEA,IAAA,SAAS,EAAG,qCAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CATD;;KAAMD,mB;;AAWN,eAAeG,OAAf,CAAuBC,WAAvB,EAAoC;AAChC,MAAI,CAACC,MAAM,CAACC,QAAZ,EAAsB;AACpBC,IAAAA,KAAK,CAAC,eAAD,CAAL;AACA;AACD;;AAED,QAAMC,QAAQ,GAAG,MAAMH,MAAM,CAACC,QAAP,CAAgBG,OAAhB,CAAwB;AAC7CC,IAAAA,MAAM,EAAE;AADqC,GAAxB,CAAvB;AAIAN,EAAAA,WAAW,CAACI,QAAQ,CAAC,CAAD,CAAT,CAAX;AACD;;AAGD,eAAeG,wBAAf,CAAwCP,WAAxC,EAAqD;AACnD,MAAIC,MAAM,CAACC,QAAX,EAAqB;AACnB,UAAME,QAAQ,GAAG,MAAMH,MAAM,CAACC,QAAP,CAAgBG,OAAhB,CAAwB;AAC7CC,MAAAA,MAAM,EAAE;AADqC,KAAxB,CAAvB;;AAIA,QAAIF,QAAQ,CAACI,MAAT,GAAkB,CAAtB,EAAyB;AACvB,YAAMC,OAAO,GAAGL,QAAQ,CAAC,CAAD,CAAxB;AACAJ,MAAAA,WAAW,CAACS,OAAD,CAAX;AACA;AACD;AACF;AACF;;AAEH,eAAeb,mBAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\n\nconst ConnectWalletbutton = ({connectWallet, ...props}) => {\n    return (\n        <button \n        onClick={connectWallet}\n        className = \"cta-button connect-to-wallet-button\"\n        >\n            Connect Metamask Wallet\n        </button>\n    )\n};\n\nasync function connect(onConnected) {\n    if (!window.ethereum) {\n      alert(\"Get MetaMask!\");\n      return;\n    }\n  \n    const accounts = await window.ethereum.request({\n      method: \"eth_requestAccounts\",\n    });\n  \n    onConnected(accounts[0]);\n  }\n  \n  \n  async function checkIfWalletIsConnected(onConnected) {\n    if (window.ethereum) {\n      const accounts = await window.ethereum.request({\n        method: \"eth_accounts\",\n      });\n  \n      if (accounts.length > 0) {\n        const account = accounts[0];\n        onConnected(account);\n        return;\n      }\n    }\n  }\n\nexport default ConnectWalletbutton;\n"]},"metadata":{},"sourceType":"module"}