[{"/Users/uelpalmer/nftBoiler/NFT_Spring2022/nft-minter/src/index.js":"1","/Users/uelpalmer/nftBoiler/NFT_Spring2022/nft-minter/src/App.js":"2","/Users/uelpalmer/nftBoiler/NFT_Spring2022/nft-minter/src/reportWebVitals.js":"3","/Users/uelpalmer/nftBoiler/NFT_Spring2022/nft-minter/src/components/CustomHeader.js":"4","/Users/uelpalmer/nftBoiler/NFT_Spring2022/nft-minter/src/components/ConnectWalletButton.js":"5","/Users/uelpalmer/nftBoiler/NFT_Spring2022/nft-minter/src/components/CustomTextField.js":"6","/Users/uelpalmer/nftBoiler/NFT_Spring2022/nft-minter/src/components/DisplayImage.js":"7","/Users/uelpalmer/nftBoiler/NFT_Spring2022/nft-minter/src/components/MintButton.js":"8","/Users/uelpalmer/nftBoiler/NFT_Spring2022/nft-minter/src/components/MetaMaskAuth.js":"9"},{"size":507,"mtime":1646876116926,"results":"10","hashOfConfig":"11"},{"size":1692,"mtime":1646952780727,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1646874361512,"results":"13","hashOfConfig":"11"},{"size":165,"mtime":1646874361511,"results":"14","hashOfConfig":"11"},{"size":347,"mtime":1646874361510,"results":"15","hashOfConfig":"11"},{"size":780,"mtime":1646874361511,"results":"16","hashOfConfig":"11"},{"size":753,"mtime":1646874361511,"results":"17","hashOfConfig":"11"},{"size":540,"mtime":1646874361511,"results":"18","hashOfConfig":"11"},{"size":1428,"mtime":1646952739778,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wstyvh",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},"/Users/uelpalmer/nftBoiler/NFT_Spring2022/nft-minter/src/index.js",[],[],"/Users/uelpalmer/nftBoiler/NFT_Spring2022/nft-minter/src/App.js",["50"],[],"import logo from './assets/logo3.png';\nimport './styles/App.css';\n\n//Component imports\nimport ConnectWalletButton from \"./components/ConnectWalletButton.js\";\nimport CustomHeader from \"./components/CustomHeader.js\"\nimport CustomTextField from \"./components/CustomTextField.js\"\nimport MintBtn from \"./components/MintButton.js\"\nimport DisplayImage from \"./components/DisplayImage.js\"\nimport MetaMaskAuth from './components/MetaMaskAuth';\n\nfunction App() {\n  // Initialization and functions\n\n  // Called when button is pressed\n // const connectWallet = async () => {\n  //  alert(\"Get MetaMask\");\n  //}\n\n  async function connect(onConnected) { \n    if (!window.ethereum) {\n      alert(\"Get MetaMask!\");\n      return;\n    }\n  \n    const accounts = await window.ethereum.request({\n      method: \"eth_requestAccounts\",\n    });\n  \n    onConnected(accounts[0]); // this function connect the user to metamask. \n  }\n\n  // Called when mint button is pressed\n  const mint = async () => {\n    alert(\"Mint\")\n  }\n\n  /* Page rendering */\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          <code>BoilerBlockchain</code>\n        </p>\n        <div className=\"Content1\"> \n          <CustomHeader text={\"NFT Minter\"}></CustomHeader>\n          <DisplayImage/>\n          <CustomTextField text={\"Purdue Email\"}></CustomTextField>\n          <input placeholder='Discord Tag'></input>\n          <br/>\n          <ConnectWalletButton connectWallet={connect}/>\n          <br/>\n          <MintBtn mintClick={mint}/>\n          <br/>\n          \n        </div>\n      </header>\n      \n    </div>\n  );\n}\n\nexport default App;\n","/Users/uelpalmer/nftBoiler/NFT_Spring2022/nft-minter/src/reportWebVitals.js",[],[],"/Users/uelpalmer/nftBoiler/NFT_Spring2022/nft-minter/src/components/CustomHeader.js",[],[],"/Users/uelpalmer/nftBoiler/NFT_Spring2022/nft-minter/src/components/ConnectWalletButton.js",["51","52"],[],"/Users/uelpalmer/nftBoiler/NFT_Spring2022/nft-minter/src/components/CustomTextField.js",["53","54"],[],"/Users/uelpalmer/nftBoiler/NFT_Spring2022/nft-minter/src/components/DisplayImage.js",["55"],[],"/Users/uelpalmer/nftBoiler/NFT_Spring2022/nft-minter/src/components/MintButton.js",["56"],[],"/Users/uelpalmer/nftBoiler/NFT_Spring2022/nft-minter/src/components/MetaMaskAuth.js",["57"],[],"import React, { useEffect, useState } from \"react\";\n\n\nasync function connect(onConnected) { \n    if (!window.ethereum) {\n      alert(\"Get MetaMask!\");\n      return;\n    }\n  \n    const accounts = await window.ethereum.request({\n      method: \"eth_requestAccounts\",\n    });\n  \n    onConnected(accounts[0]); // this function connect the user to metamask. \n}\n\nfunction Connect({ setUserAddress }) {\n    return (\n      <button onClick={() => connect(setUserAddress)}>\n        Connect to MetaMask\n      </button>\n    );\n  }\nfunction Address({ userAddress }) {\n    return (\n      <span>{userAddress.substring(0, 5)}â€¦{userAddress.substring(userAddress.length - 4)}</span>\n);\n}\n\n\nasync function checkIfWalletIsConnected(onConnected) {\n    if (window.ethereum) {\n      const accounts = await window.ethereum.request({\n        method: \"eth_accounts\",\n      });\n  \n      if (accounts.length > 0) {\n        const account = accounts[0];\n        onConnected(account);\n        return;\n      }\n    }\n  }\n\n\nexport default function MetaMaskAuth({ onAddressChanged }) {\n  const [userAddress, setUserAddress] = useState(\"\");\n\n  useEffect(() => {\n    checkIfWalletIsConnected(setUserAddress);\n  }, []);\n\n  useEffect(() => {\n    onAddressChanged(userAddress);\n  }, [userAddress]);\n\n  return userAddress ? (\n    <div>\n      Connected with <Address userAddress={userAddress} />\n    </div>\n  ) : (\n     <Connect setUserAddress={setUserAddress}/>\n  );\n}",["58","59"],{"ruleId":"60","severity":1,"message":"61","line":10,"column":8,"nodeType":"62","messageId":"63","endLine":10,"endColumn":20},{"ruleId":"60","severity":1,"message":"64","line":1,"column":17,"nodeType":"62","messageId":"63","endLine":1,"endColumn":26},{"ruleId":"60","severity":1,"message":"65","line":1,"column":28,"nodeType":"62","messageId":"63","endLine":1,"endColumn":36},{"ruleId":"60","severity":1,"message":"66","line":1,"column":10,"nodeType":"62","messageId":"63","endLine":1,"endColumn":16},{"ruleId":"67","severity":1,"message":"68","line":19,"column":33,"nodeType":"69","messageId":"70","endLine":19,"endColumn":35},{"ruleId":"71","severity":1,"message":"72","line":27,"column":13,"nodeType":"73","endLine":27,"endColumn":66},{"ruleId":"60","severity":1,"message":"66","line":1,"column":10,"nodeType":"62","messageId":"63","endLine":1,"endColumn":16},{"ruleId":"74","severity":1,"message":"75","line":55,"column":6,"nodeType":"76","endLine":55,"endColumn":19,"suggestions":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},"no-unused-vars","'MetaMaskAuth' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'render' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onAddressChanged'. Either include it or remove the dependency array. If 'onAddressChanged' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["82"],"no-native-reassign",["83"],"no-negated-in-lhs",["84"],{"desc":"85","fix":"86"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [onAddressChanged, userAddress]",{"range":"87","text":"88"},[1242,1255],"[onAddressChanged, userAddress]"]